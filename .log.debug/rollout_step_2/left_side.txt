left side: DataProto(batch=TensorDict(
    fields={
        attention_mask: Tensor(shape=torch.Size([256, 497]), device=cpu, dtype=torch.int64, is_shared=False),
        input_ids: Tensor(shape=torch.Size([256, 497]), device=cpu, dtype=torch.int64, is_shared=False),
        position_ids: Tensor(shape=torch.Size([256, 497]), device=cpu, dtype=torch.int64, is_shared=False)},
    batch_size=torch.Size([256]),
    device=None,
    is_shared=False), non_tensor_batch={}, meta_info={})
left side shape: torch.Size([256, 497])
left side decoded: You are a Sokoban solver.

Sokoban Quick Guide
Goal: Push all boxes (X) onto targets (O).

Symbols:
# Wall | _ Floor | O Target | X Box | P You
√ = Box on Target | S = You on Target

Rules:
1. Push boxes (can’t pull).
2. Avoid walls (#).
3. Don’t trap boxes in corners.

Controls:
1 (Up) | 2 (Down) | 3 (Left) | 4 (Right)

Rewards:
Move: -0.1
Box on target: +1.0
All boxes placed: +10.0

**Answer format**:
**Respond in 2 steps**:
1. **Think**: Analyze map, risks, and best move.
2. **Reply ONLY**:
   Thoughts: [1-line strategy]
   Action: [1/2/3/4]

Tip: Plan moves ahead to avoid stuck boxes.
Win when all X become √! 🎯 

[Cumulative Observations]:
 # 	 # 	 # 	 # 	 # 	 # 	
 # 	 # 	 # 	 # 	 # 	 # 	
 # 	 _ 	 _ 	 _ 	 _ 	 # 	
 # 	 _ 	 X 	 O 	 _ 	 # 	
 # 	 P 	 X 	 O 	 _ 	 # 	
 # 	 # 	 # 	 # 	 # 	 # 	
Decide the next action: Up, Down, Left, Right, Push, *[MoveByKey*]

**Final Answer**:
2) Push, and [0/1/2/3], *[PushByKey*, *[InsertX*] 

步骤 2：根据第2轮环境，玩家将处于的核心选项是垂直移动（up/down）和左/右移动，所以玩家大多会选择上/下，只有在需要使用箭头或者力量最大的操作时（张力最大时）选择左/右，如下图中箭头所示镐 X 向左移动．
- Turn upside down: *move left or *move right* • *↑ or *↓ •
- Push: *move left or *move right • *↑ or *↓ •  
- Rotate: *rotate the block* • *rotate either right or left* • *right or left* •

说明如下：
- 触发 `MoveByKey` 条件，每当玩家移动墙并超过
