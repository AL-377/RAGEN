right side: DataProto(batch=TensorDict(
    fields={
        attention_mask: Tensor(shape=torch.Size([256, 500]), device=cpu, dtype=torch.int64, is_shared=False),
        input_ids: Tensor(shape=torch.Size([256, 500]), device=cpu, dtype=torch.int64, is_shared=False),
        old_log_probs: Tensor(shape=torch.Size([256, 100]), device=cpu, dtype=torch.float32, is_shared=False),
        position_ids: Tensor(shape=torch.Size([256, 500]), device=cpu, dtype=torch.int64, is_shared=False),
        prompts: Tensor(shape=torch.Size([256, 400]), device=cpu, dtype=torch.int64, is_shared=False),
        responses: Tensor(shape=torch.Size([256, 100]), device=cpu, dtype=torch.int64, is_shared=False)},
    batch_size=torch.Size([256]),
    device=cpu,
    is_shared=False), non_tensor_batch={}, meta_info={'micro_batch_size': 8, 'max_token_len': 16384, 'use_dynamic_bsz': False, 'temperature': 1.0})
right side shape: torch.Size([256, 100])
right side decoded:  After observing this lever arm reinforcement, it appears I should take the right path. The box will eventually disappear, and I'll minimize the chance of trapped boxes towards the goal. Therefore, the optimal strategy is: </think> 3 (Right)

Action: 3<|im_end|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>
